#!/bin/bash

export TSVER=5.2
export TSWRKNG=/ts/$TSVER
export TSPKGROOT=ts/$TSVER/packages
export TSCOMPROOT=ts/components
export LESSCHARSET="latin1"
export LESS="-R"
export CHARSET="ISO-8859-1"
export PS1="\n\[\033[1;30m\][\[\033[1;34m\]\u\[\033[1;30m\]@\[\033[0;34m\]TS_chroot\[\033[1;30m\]]\[\033[1;37m\]\w\[\033[1;30m\]\\$\[\033[0m\] "
export PS2="\[\033[1m\]> \[\033[0m\]"
export FONT=default
export KEYMAP=us
export TIMEZONE=US/Pacific
export LANG=POSIX
export LANGUAGE=POSIX
export HISTFILE=/root/.bash_history
export HOME=/root
export LOGNAME=root
export PAGER=most
LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.conf=01;33:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export LS_COLORS
PATH=$PATH:/ts/bin:/sbin
alias ls='ls --color'
umask 022

get_gnome_proxy()
{
        mode=`gconftool-2 -g /system/proxy/mode`
        use_http_proxy=`gconftool-2 -g /system/http_proxy/use_http_proxy`
        use_same_proxy=`gconftool-2 -g /system/http_proxy/use_same_proxy`
        use_authentication=`gconftool-2 -g /system/http_proxy/use_authentication`
        authentication_user=`gconftool-2 -g /system/http_proxy/authentication_user`
        authentication_password=`gconftool-2 -g /system/http_proxy/authentication_password`
        host=`gconftool-2 -g /system/http_proxy/host`
        port=`gconftool-2 -g /system/http_proxy/port`
        secure_host=`gconftool-2 -g /system/proxy/secure_host`
        secure_port=`gconftool-2 -g /system/proxy/secure_port`
        ftp_host=`gconftool-2 -g /system/proxy/ftp_host`
        ftp_port=`gconftool-2 -g /system/proxy/ftp_port`

        if [ -z "$use_authentication" ]; then use_authentication=false ; fi
}

set_proxy()
{
        if [ "$mode" == "manual" ]; then
                if $use_http_proxy && [ -n "$host" ] && [ -n "$port" ] ; then
                        if $use_authentication; then
                                if [ -n "$authentication_user" ] && [ -n "$authentication_password" ]; then
                                        PROXY_AUTH="$authentication_user:$authentication_password"
                                elif [ -n "$authentication_user" ]; then
                                        PROXY_AUTH="$authentication_user"
                                fi
                                export http_proxy=http://${PROXY_AUTH}@$host:$port
                                if [ -n "$ftp_host" ] && [ -n "$ftp_port" ]; then
                                        export ftp_proxy=http://${PROXY_AUTH}@$ftp_host:$ftp_port
                                fi
                        else
                                if [ -n "$ftp_host" ] && [ -n "$ftp_port" ]; then
                                        export ftp_proxy=http://$ftp_host:$ftp_port
                                fi
                                export http_proxy=http://$host:$port
                        fi
                        if [ -n "$secure_host" ] && [ -n "$secure_port" ]; then
                                export https_proxy=https://$secure_host:$secure_port
                        fi
                fi
        fi
}

get_gnome_proxy
set_proxy


if [ -e /opt/jre/bin/java ]; then
	PATH=$PATH:/opt/jre/bin
fi
if [ -e /opt/meld/bin/meld ]; then
	PATH=$PATH:/opt/meld/bin
fi
if [ -e /dostage2 ] ; then
	/ts/bin/install_chroot
fi
if [ ! -e /root/.nanorc ] ;
	then cp -f /ts/.nanorc /root/.
fi

cp -af /ts/etc/* /etc/.

if [ -e /dostage3 ] ; then
	/ts/bin/install_chroot
#	echo "All most done. Please run setup_chroot again"
	touch installed
	exit
fi

if [ ! -e /ts/etc/READ ] && [ ! -e /BUILD* ] && [ ! -e /CLEAN ] ; then
	ronn --roff -m /README.md
fi

if [ -e /BUILD ] ; then
	cd /ts/2.5
	./build --autodl --license ACCEPT
	rm /BUILD
	exit 2
elif [ -e /BUILD.$INSTANCE ] ; then
	. /BUILD.$INSTANCE
	rm /BUILD.$INSTANCE
	exit 2
elif [ -e /CLEAN ] ; then
	clean_chroot
	rm CLEAN
	exit 2
else
	echo -e "\nDevelopment Environment Active. Type 'exit' to leave when done."
fi
