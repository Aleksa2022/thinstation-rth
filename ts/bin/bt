#!/bin/bash
set -x
#set -e

confirm_iso()
{
	case $1 in
		systemd) ISO=build/boot-images/systemd-boot-iso/thinstation-efi.iso ;;
		refind) ISO=build/boot-images/refind-iso/thinstation-efi.iso ;;
		grub) ISO=build/boot-images/grub/thinstation-efi.iso;;
	esac
	if [ ! = $ISO ]; then
		"$1 ISO $ISO"
		"Not Found!"
		exit 1
	fi
	CDROM="-drive file=$ISO,if=ide,media=cdrom,readonly"
}

confirm_hd()
{
	if [ ! -e $HD ]; then
		qemu-img create -f raw $HD 31G
	        if [ "$?" != "0" ]; then
			echo "Likely not enought space to create hd image."
			exit 3
		fi
	fi
}

bridge()
{
	if [ -n "`ifconfig |grep -e ens33`" ]; then
		echo "-net bridge,br=ens33"
#	else
#		echo "-netdev user,id=n1 -device e1000,netdev=n1 -netdev tap,id=n2 -device virtio-net,netdev=n2"
	fi
}

wrap_systemd_efi()
{
	if [ ! -e build/boot-images/systemd-boot-iso ]; then
		echo "$IMAGE not found?"
		echo "Did you build an systemd image."
		exit 1
	fi
	export AGREE=true
	rm thinstation.img
	mkgptdrv -p ESP:4g:boot -p l:0:home -o /build/boot-images/grub/efi-source -l thinstation.img:8g
}

wrap_refind_efi()
{
	if [ ! -e build/boot-images/refind-iso ]; then
                echo "refind image not found?"
                echo "Did you build an refind image."
                exit 1
        fi
        export AGREE=true
	rm thinstation.img
	mkgptdrv -p ESP:4g:boot -p l:0:home -o /build/boot-images/refind-iso/efi-source -l thinstation.img:8g
}

wrap_bios()
{
	if [ ! -e build/boot-images/iso ]; then
                echo "syslinux image not found."
                echo "Did you build and image?"
                exit 1
        fi
	export AGREE=true
	rm thinstation.img
	mkmbrdrv -p d:4g:boot -p l:0:home -o /build/boot-images/iso/source -l thinstation.img:8g
}

setup_qemu()
{
	procs=`nproc`
	let procs=procs/2
	HD=thinstation.img
	HDD="-drive file=$HD,index=0,media=disk,format=raw"
	VGA="-vga qxl -global qxl-vga.vram_size=132710400"
#	VGA="-vga virtio"
#	VGA="-vga std"
#	VGA="-vga cirrus"
#	VGA="-vga vmware"
	SOUND="-device AC97"
	CPU="-smp cores=$procs,threads=1,sockets=1"
	MEMORY="-m 2048"
#	RNG="-object rng-random,id=RNG"
	MOUSE="-usb -device usb-tablet"
	KVM="-enable-kvm"
	EFI="-L . --bios usr/share/edk2.git/ovmf-x64/OVMF-pure-efi.fd"
#	NETWORK=`bridge`
#	QEMU=qemu-system-i386
	QEMU=qemu-system-x86_64

	STANDARD_MACHINE="$SOUND $RNG $VGA $CPU $MEMORY $MOUSE $KVM $NETWORK"
}

setup_qemu
case $1 in
        hd)
		wrap_bios && \
                $QEMU $STANDARD_MACHINE $HDD --boot c
                echo "Exit code $?"
	;;
	hd-systemd)
		wrap_systemd_efi && \
		$QEMU $STANDARD_MACHINE $EFI $HDD --boot c
		echo "Exit code $?"
	;;
	hd-refind)
		wrap_refind_efi && \
		$QEMU $STANDARD_MACHINE $EFI $HDD --boot c
                echo "Exit code $?"
	;;
	net)
		$QEMU $STANDARD_MACHINE
		echo "Exit code $?"
	;;
        net-efi)
                $QEMU $STANDARD_MACHINE $EFI
		echo "Exit code $?"
	;;
        cd)
		confirm_iso grub && \
                $QEMU $STANDARD_MACHINE $CDROM --boot d
                echo "Exit code $?"
	;;
	cd-systemd)
		confirm_iso systemd && \
		$QEMU $STANDARD_MACHINE $CDROM $EFI --boot d
		echo "Exit code $?"
	;;
	cd-refind)
		confirm_iso refind && \
		$QEMU $STANDARD_MACHINE $CDROM $EFI --boot d
                echo "Exit code $?"
	;;
	image)
                confirm hd && \
                confirm_iso systemd && \
                $QEMU $STANDARD_MACHINE $HDD $CDROM--boot c,menu=on
                echo "Exit code $?"
	;;
	image-systemd)
		confirm_hd && \
		confirm_iso systemd && \
                $QEMU $STANDARD_MACHINE $HDD $CDROM $EFI --boot c,menu=on
                echo "Exit code $?"
	;;
	image-refind)
		confirm_hd && \
		confirm_iso systemd && \
                $QEMU $STANDARD_MACHINE $HDD $CDROM $EFI --boot c,menu=on
                echo "Exit code $?"
	;;
	cd-image-grub)
		confirm_iso grub
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD --boot c,menu=on
		echo "Exit code $?"
	;;
	cd-image-refind)
		confirm_iso refind
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD --boot c,menu=on
		echo "Exit code $?"
	;;
	cd-image-systemd)
		confirm_iso systemd
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD --boot c,menu=on
		echo "Exit code $?"
	;;
	cd-image-grub-efi)
		confirm_iso grub
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD $EFI --boot c,menu=on
		echo "Exit code $?"
	;;
	cd-image-refind-efi)
		confirm_iso refind
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD $EFI --boot c,menu=on
		echo "Exit code $?"
	;;
	cd-image-systemd-efi)
		confirm_iso systemd
		HDD="-drive file=$ISO,index=0,media=disk,format=raw"
		$QEMU $STANDARD_MACHINE $HDD $EFI --boot c,menu=on
		echo "Exit code $?"
	;;
esac
