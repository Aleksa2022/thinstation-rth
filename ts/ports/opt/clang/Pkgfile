# Description: LLVM compiler backend
# URL:         http://llvm.org/
# Maintainer:  Thomas Penteker, tek at serverop dot de
# Depends on:  cmake libffi python

name=clang
version=12.0.1
release=2
source=(https://github.com/llvm/llvm-project/archive/llvmorg-$version.tar.gz
	llvm-config.h)

build() {
#  cd $name-$version
  cd llvm-project-llvmorg-$version/llvm

  mkdir build
  cd build

  cmake .. -G Ninja \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DLLVM_HOST_TRIPLE=x86_64-pc-linux-gnu \
    -DLLVM_PARALLEL_COMPILE_JOBS="${JOBS:-1}" \
    -DLLVM_ENABLE_CXX1Y=1 \
    -DLLVM_BUILD_LLVM_DYLIB=ON \
    -DLLVM_LINK_LLVM_DYLIB=ON \
    -DLLVM_INSTALL_UTILS=ON \
    -DLLVM_ENABLE_RTTI=ON \
    -DLLVM_ENABLE_FFI=ON \
    -DLLVM_BUILD_TESTS=ON \
    -DLLVM_BUILD_DOCS=ON \
    -DLLVM_ENABLE_SPHINX=ON \
    -DLLVM_ENABLE_DOXYGEN=OFF \
    -DLLVM_ENABLE_PROJECTS="libcxx;libcxxabi;clang" \
    -DSPHINX_WARNINGS_AS_ERRORS=OFF \
    -DFFI_INCLUDE_DIR=$(pkg-config --variable=includedir libffi) \
    -DLLVM_BINUTILS_INCDIR=/usr/include
  ninja all

  DESTDIR="$PKG" ninja install

  for file in `find $PKG ! -type d |cut -d '/' -f8- |grep -Ev 'clang|scan-build|scan-view|diagtool|hmaptool|c-index-test|libexec'`; do
        rm $PKG/$file
  done
  find $PKG -type d -empty -delete
}
