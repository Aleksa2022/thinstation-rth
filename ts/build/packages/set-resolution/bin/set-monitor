#!/bin/bash

. $TS_GLOBAL

#xrandr --output HDMI3 --pos 1920x0


monitors=$(xrandr --listactivemonitors | grep -E '[0-9+]:')
monitorsCount=$(xrandr --listactivemonitors | grep -E '[0-9+]:' | wc -l)


# Expand monitors
if [ $monitorsCount -ge 2 ] ; then
    echo "Multiple monitors detected"

#    if [ -n "$SET_MONITOR_EXPAND" ]; then
#         case "$(make_lower $SET_MONITOR_EXPAND)" in
#             up)
#                 monitorExpand='--above'
#             ;;
#
#             down)
#                 monitorExpand='--below'
#             ;;
#
#             left)
#                 monitorExpand='--left-of'
#             ;;
#
#             right)
#                 monitorExpand='--right-of'
#             ;;
#
#             *)
#                 monitorExpand='--same-as' #mirror
#         esac
#    else
#        monitorExpand='--same-as' #mirror
#    fi
#
#    echo "monitorExpand='$monitorExpand'"
#    echo "monexp = '$SET_MONITOR_EXPAND'"

    # do with variable SET_MONITOR_EXPAND='mirror|horizontal|vertical'
    # or rather, left, right, up down and depending on that set
    #   --left-of <output> --pos -${lastPos}x0
    #   --right-of <output> --pos ${lastPos}x0
    #   --above <output> --pos 0x-${lastPos}
    #   --below <output> --pos 0x${lastPos}
    #
    # is --same-as <output> the use for mirroring...?
#    lastPos=0
    maxWidth=0
    maxHight=0


    echo "SET_MONITOR_EXPAND is set to '$SET_MONITOR_EXPAND'"

    ###
    # Process all monitors to expand or mirror them.
    
    # Make the for-loop split the string on newline
    IFS=$'\n'
    for m in ${monitors}; do
        echo "Expanding monitor $m"

        # Split the row into an array
        IFS=' ' read -ra rowPart <<< "$m"

        monitorName=${rowPart[3]}



        # Split the resolution part of the row
        IFS='/' read -ra rowPartResolution <<< "${rowPart[2]}"

        monitorWidth=${rowPartResolution[0]}
        monitorHight=$(echo ${rowPartResolution[1]} | sed 's/.*x//')

        # See if this monitor has a higher resolution
        if [ "$monitorWidth" -gt "$maxWidth" ]; then
            maxWidth=$monitorWidth
        fi
        
        if [ "$monitorHight" -gt "$maxHight" ]; then
            maxHight=$monitorHight
        fi

        #echo "lastPos = $lastPos"
        echo "monitorName  = '$monitorName'"
        echo "monitorWidth = '$monitorWidth'"
        echo "monitorHight = '$monitorHight'"
        echo "maxWidth = '$maxWidth'"
        echo "maxHight = '$maxHight'"

        # If this is monitor 2+ in the list, exand to it.
        if [ -n "$firstMonitorName" ]; then
            
            case "$(make_lower $SET_MONITOR_EXPAND)" in
                up)
                    #monitorExpand='--above'
                    echo "Running up command 'xrandr --output $monitorName --above $lastMonitorName'"
                    xrandr --output $monitorName --above $lastMonitorName
                    #xrandr --output $monitorName --above $lastMonitorName --pos 0x-${lastPos}
                    #let "lastPos += $monitorHight"
                ;;

                down)
                    #monitorExpand='--below'
                    echo "Running down command 'xrandr --output $monitorName --below $lastMonitorName'"
                    xrandr --output $monitorName --below $lastMonitorName
                    #xrandr --output $monitorName --below $lastMonitorName --pos 0x${lastPos}
                    #let "lastPos += $monitorHight"
                ;;

                left)
                    #monitorExpand='--left-of'
                    echo "Running left command 'xrandr --output $monitorName --left-of $lastMonitorName'"
                    xrandr --output $monitorName --left-of $lastMonitorName
                    #xrandr --output $monitorName --left-of $lastMonitorName --pos -${lastPos}x0
                    #let "lastPos += $monitorWidth"
                ;;

                right)
                    #monitorExpand='--right-of'
                    echo "Running right command 'xrandr --output $monitorName --right-of $lastMonitorName'"
                    xrandr --output $monitorName --right-of $lastMonitorName
                    #xrandr --output $monitorName --right-of $lastMonitorName --pos ${lastPos}x0
                    #let "lastPos += $monitorWidth"
                ;;

                *)
                    #monitorExpand='--same-as' #mirror
                    # Mirror option
                    echo "Running mirror command 'xrandr --output $monitorName --same-as $firstMonitorName'"
                    xrandr --output $monitorName --same-as $firstMonitorName
            esac
        else
            # This is the first monitor, set the firstMonitorName variable so we can use it if we are mirroring the displays.
            firstMonitorName=$monitorName
        fi

        lastMonitorName=$monitorName

#         # Configure the monitor (but not the first monitor, thereby lastPost must be > 0
#         if [ $lastPos -eq 0 ]; then
#             # This is the first monitor, just grab it's name so we can use it when configuring the next monitors.
#             firstMonitorName=$monitorName
#
#             case "$(make_lower $SET_MONITOR_EXPAND)" in
#                 up|down)
#                     lastPos=$monitorHight
#                 ;;
#
#                 *)
#                     lastPos=$monitorWidth
#                 ;;
#             esac
#
#         else
#             # Not the first monitor, expand to some direction
#             case "$(make_lower $SET_MONITOR_EXPAND)" in
#                 up)
#                     #monitorExpand='--above'
#                     echo "Running up command 'xrandr --output $monitorName --above $lastMonitorName --pos 0x-${lastPos}'"
#                     xrandr --output $monitorName --above $lastMonitorName
#                     #xrandr --output $monitorName --above $lastMonitorName --pos 0x-${lastPos}
#                     let "lastPos += $monitorHight"
#                 ;;
#
#                 down)
#                     #monitorExpand='--below'
#                     echo "Running down command 'xrandr --output $monitorName --below $lastMonitorName --pos 0x${lastPos}'"
#                     xrandr --output $monitorName --below $lastMonitorName
#                     #xrandr --output $monitorName --below $lastMonitorName --pos 0x${lastPos}
#                     let "lastPos += $monitorHight"
#                 ;;
#
#                 left)
#                     #monitorExpand='--left-of'
#                     echo "Running left command 'xrandr --output $monitorName --left-of $lastMonitorName --pos -${lastPos}x0'"
#                     xrandr --output $monitorName --left-of $lastMonitorName
#                     #xrandr --output $monitorName --left-of $lastMonitorName --pos -${lastPos}x0
#                     let "lastPos += $monitorWidth"
#                 ;;
#
#                 right)
#                     #monitorExpand='--right-of'
#                     echo "Running right command 'xrandr --output $monitorName --right-of $lastMonitorName --pos ${lastPos}x0'"
#                     xrandr --output $monitorName --right-of $lastMonitorName
#                     #xrandr --output $monitorName --right-of $lastMonitorName --pos ${lastPos}x0
#                     let "lastPos += $monitorWidth"
#                 ;;
#
#                 *)
#                     #monitorExpand='--same-as' #mirror
#                     # Mirror option
#                     echo "Running mirror command 'xrandr --output $monitorName --same-as $firstMonitorName'"
#                     xrandr --output $monitorName --same-as $firstMonitorName
#             esac
#
#
#
#
#
#
#
#
#
# #             if [ "$monitorExpand" = "--same-as" ]; then
# #                 # Mirror option
# #                 echo "Running command 'xrandr --output $monitorName --same-as $firstMonitorName'"
# #
# #             else
# #                 # Expand to some direction
# #                 case "$monitorExpand" in
# #                     --above)
# #                         echo "Running command 'xrandr --output $monitorName $monitorExpand $firstMonitorName --pos 0x-${lastPos}'"
# #                         let "lastPos += $monitorHight"
# #                     ;;
# #                     --below)
# #                         echo "Running command 'xrandr --output $monitorName $monitorExpand $firstMonitorName --pos 0x-${lastPos}'"
# #                         let "lastPos += $monitorHight"
# #                     
# #                     ;;
# #                 esac
# #
# #
# #
# #
# # #                if [ "$monitorExpand" = "--above" -o "$monitorExpand" = "--below" ]; then
# # #                    echo "Running command 'xrandr --output $monitorName $monitorExpand $firstMonitorName --pos 0x-${lastPos}'"
# # #                    
# # #                    let "lastPos += $monitorHight"
# # #                else
# # #                    let "lastPos += $monitorWidth"
# # #                fi
# #             fi
#         fi
#
#         lastMonitorName=$monitorName
#
    done



    ###
    # Start to scale all monitors so that the image is fitted to the highest resolution.

    echo "SET_MONITOR_AUTOSCALE = '$SET_MONITOR_AUTOSCALE'"
    
    if [ -z "$SET_MONITOR_AUTOSCALE" ] || is_enabled $SET_MONITOR_AUTOSCALE; then
        # Make the for-loop split the string on newline
        IFS=$'\n'
        for m in ${monitors}; do
            #echo "Scaling monitor $m"

            # Split the row into an array
            IFS=' ' read -ra rowPart <<< "$m"

            monitorName=${rowPart[3]}

            # Split the resolution part of the row
            IFS='/' read -ra rowPartResolution <<< "${rowPart[2]}"

            monitorWidth=${rowPartResolution[0]}
            monitorHight=$(echo ${rowPartResolution[1]} | sed 's/.*x//')

            # See if we need to scale this monitor
            if [ "$monitorHight" -lt "$maxWidth" -o "$monitorWidth" -lt "$maxHight" ]; then
                echo "Scaling monitor $monitorName having resolution ${monitorWidth}x${monitorHight} into ${maxWidth}x${maxHight}"
                xrandr --output $monitorName --scale-from ${maxWidth}x${maxHight}
            else
                echo "Monitor $monitorName, no scaling needed, resolution ${monitorWidth}x${monitorHight} is the same as the deskop size ${maxWidth}x${maxHight}"
            fi
        done
    else
        echo "SET_MONITOR_AUTOSCALE was '$SET_MONITOR_AUTOSCALE', monitors will not be scaled to fit the highest resolution."

    fi

else
    echo "Did not detect multiple monitors"
fi


# Set the DPI
if [ -n "$SET_MONITOR_DPI" ]; then
    xrandr --dpi $SET_MONITOR_DPI
fi



